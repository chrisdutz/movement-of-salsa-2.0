// Generated from src/generated/permissions/parser/Expression.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ExpressionLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly ID = 27;
	public static readonly INT = 28;
	public static readonly FLOAT = 29;
	public static readonly STRING = 30;
	public static readonly NEWLINE = 31;
	public static readonly WS = 32;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "ID", "INT", "FLOAT", "STRING", "ESC", "NEWLINE", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'&&'", "'||'", "'!'", "'true'", "'false'", "'('", "')'", "'*'", 
		"'/'", "'+'", "'-'", "'%'", "'>>'", "'<<'", "'&'", "'|'", "'=='", "'!='", 
		"'<'", "'<='", "'>'", "'>='", "'['", "']'", "'.'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "ID", 
		"INT", "FLOAT", "STRING", "NEWLINE", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ExpressionLexer._LITERAL_NAMES, ExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Expression.g4"; }

	// @Override
	public get ruleNames(): string[] { return ExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ExpressionLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ExpressionLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ExpressionLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\"\xB9\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03" +
		"\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03" +
		"\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03" +
		"\x1B\x03\x1C\x03\x1C\x07\x1C\x8B\n\x1C\f\x1C\x0E\x1C\x8E\v\x1C\x03\x1D" +
		"\x06\x1D\x91\n\x1D\r\x1D\x0E\x1D\x92\x03\x1E\x06\x1E\x96\n\x1E\r\x1E\x0E" +
		"\x1E\x97\x03\x1E\x03\x1E\x07\x1E\x9C\n\x1E\f\x1E\x0E\x1E\x9F\v\x1E\x03" +
		"\x1F\x03\x1F\x03\x1F\x07\x1F\xA4\n\x1F\f\x1F\x0E\x1F\xA7\v\x1F\x03\x1F" +
		"\x03\x1F\x03 \x03 \x03 \x03!\x05!\xAF\n!\x03!\x03!\x03\"\x06\"\xB4\n\"" +
		"\r\"\x0E\"\xB5\x03\"\x03\"\x02\x02\x02#\x03\x02\x03\x05\x02\x04\x07\x02" +
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
		"#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02" +
		"\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02\x02A\x02" +
		"!C\x02\"\x03\x02\b\x05\x02C\\aac|\x06\x022;C\\aac|\x03\x022;\x04\x02$" +
		"$^^\n\x02$$))^^ddhhppttvv\x05\x02\v\f\x0F\x0F\"\"\x02\xBF\x02\x03\x03" +
		"\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
		"\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
		"\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
		"\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
		"\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
		"\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02" +
		"\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03" +
		"\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02" +
		"\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02" +
		"=\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x03E\x03\x02" +
		"\x02\x02\x05H\x03\x02\x02\x02\x07K\x03\x02\x02\x02\tM\x03\x02\x02\x02" +
		"\vR\x03\x02\x02\x02\rX\x03\x02\x02\x02\x0FZ\x03\x02\x02\x02\x11\\\x03" +
		"\x02\x02\x02\x13^\x03\x02\x02\x02\x15`\x03\x02\x02\x02\x17b\x03\x02\x02" +
		"\x02\x19d\x03\x02\x02\x02\x1Bf\x03\x02\x02\x02\x1Di\x03\x02\x02\x02\x1F" +
		"l\x03\x02\x02\x02!n\x03\x02\x02\x02#p\x03\x02\x02\x02%s\x03\x02\x02\x02" +
		"\'v\x03\x02\x02\x02)x\x03\x02\x02\x02+{\x03\x02\x02\x02-}\x03\x02\x02" +
		"\x02/\x80\x03\x02\x02\x021\x82\x03\x02\x02\x023\x84\x03\x02\x02\x025\x86" +
		"\x03\x02\x02\x027\x88\x03\x02\x02\x029\x90\x03\x02\x02\x02;\x95\x03\x02" +
		"\x02\x02=\xA0\x03\x02\x02\x02?\xAA\x03\x02\x02\x02A\xAE\x03\x02\x02\x02" +
		"C\xB3\x03\x02\x02\x02EF\x07(\x02\x02FG\x07(\x02\x02G\x04\x03\x02\x02\x02" +
		"HI\x07~\x02\x02IJ\x07~\x02\x02J\x06\x03\x02\x02\x02KL\x07#\x02\x02L\b" +
		"\x03\x02\x02\x02MN\x07v\x02\x02NO\x07t\x02\x02OP\x07w\x02\x02PQ\x07g\x02" +
		"\x02Q\n\x03\x02\x02\x02RS\x07h\x02\x02ST\x07c\x02\x02TU\x07n\x02\x02U" +
		"V\x07u\x02\x02VW\x07g\x02\x02W\f\x03\x02\x02\x02XY\x07*\x02\x02Y\x0E\x03" +
		"\x02\x02\x02Z[\x07+\x02\x02[\x10\x03\x02\x02\x02\\]\x07,\x02\x02]\x12" +
		"\x03\x02\x02\x02^_\x071\x02\x02_\x14\x03\x02\x02\x02`a\x07-\x02\x02a\x16" +
		"\x03\x02\x02\x02bc\x07/\x02\x02c\x18\x03\x02\x02\x02de\x07\'\x02\x02e" +
		"\x1A\x03\x02\x02\x02fg\x07@\x02\x02gh\x07@\x02\x02h\x1C\x03\x02\x02\x02" +
		"ij\x07>\x02\x02jk\x07>\x02\x02k\x1E\x03\x02\x02\x02lm\x07(\x02\x02m \x03" +
		"\x02\x02\x02no\x07~\x02\x02o\"\x03\x02\x02\x02pq\x07?\x02\x02qr\x07?\x02" +
		"\x02r$\x03\x02\x02\x02st\x07#\x02\x02tu\x07?\x02\x02u&\x03\x02\x02\x02" +
		"vw\x07>\x02\x02w(\x03\x02\x02\x02xy\x07>\x02\x02yz\x07?\x02\x02z*\x03" +
		"\x02\x02\x02{|\x07@\x02\x02|,\x03\x02\x02\x02}~\x07@\x02\x02~\x7F\x07" +
		"?\x02\x02\x7F.\x03\x02\x02\x02\x80\x81\x07]\x02\x02\x810\x03\x02\x02\x02" +
		"\x82\x83\x07_\x02\x02\x832\x03\x02\x02\x02\x84\x85\x070\x02\x02\x854\x03" +
		"\x02\x02\x02\x86\x87\x07.\x02\x02\x876\x03\x02\x02\x02\x88\x8C\t\x02\x02" +
		"\x02\x89\x8B\t\x03\x02\x02\x8A\x89\x03\x02\x02\x02\x8B\x8E\x03\x02\x02" +
		"\x02\x8C\x8A\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D8\x03\x02\x02" +
		"\x02\x8E\x8C\x03\x02\x02\x02\x8F\x91\t\x04\x02\x02\x90\x8F\x03\x02\x02" +
		"\x02\x91\x92\x03\x02\x02\x02\x92\x90\x03\x02\x02\x02\x92\x93\x03\x02\x02" +
		"\x02\x93:\x03\x02\x02\x02\x94\x96\t\x04\x02\x02\x95\x94\x03\x02\x02\x02" +
		"\x96\x97\x03\x02\x02\x02\x97\x95\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02" +
		"\x98\x99\x03\x02\x02\x02\x99\x9D\x070\x02\x02\x9A\x9C\t\x04\x02\x02\x9B" +
		"\x9A\x03\x02\x02\x02\x9C\x9F\x03\x02\x02\x02\x9D\x9B\x03\x02\x02\x02\x9D" +
		"\x9E\x03\x02\x02\x02\x9E<\x03\x02\x02\x02\x9F\x9D\x03\x02\x02\x02\xA0" +
		"\xA5\x07$\x02\x02\xA1\xA4\x05? \x02\xA2\xA4\n\x05\x02\x02\xA3\xA1\x03" +
		"\x02\x02\x02\xA3\xA2\x03\x02\x02\x02\xA4\xA7\x03\x02\x02\x02\xA5\xA3\x03" +
		"\x02\x02\x02\xA5\xA6\x03\x02\x02\x02\xA6\xA8\x03\x02\x02\x02\xA7\xA5\x03" +
		"\x02\x02\x02\xA8\xA9\x07$\x02\x02\xA9>\x03\x02\x02\x02\xAA\xAB\x07^\x02" +
		"\x02\xAB\xAC\t\x06\x02\x02\xAC@\x03\x02\x02\x02\xAD\xAF\x07\x0F\x02\x02" +
		"\xAE\xAD\x03\x02\x02\x02\xAE\xAF\x03\x02\x02\x02\xAF\xB0\x03\x02\x02\x02" +
		"\xB0\xB1\x07\f\x02\x02\xB1B\x03\x02\x02\x02\xB2\xB4\t\x07\x02\x02\xB3" +
		"\xB2\x03\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5\xB3\x03\x02\x02\x02\xB5" +
		"\xB6\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB8\b\"\x02\x02\xB8D" +
		"\x03\x02\x02\x02\v\x02\x8C\x92\x97\x9D\xA3\xA5\xAE\xB5\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ExpressionLexer.__ATN) {
			ExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ExpressionLexer._serializedATN));
		}

		return ExpressionLexer.__ATN;
	}

}

